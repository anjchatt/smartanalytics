conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
library(bigr)
library(bigr)
library(bigr)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
customerData <- bigr.frame(dataPath="customerDataCld.csv",
dataSource = "DEL",
delimiter = ",",
header = T,
coltypes = ifelse(1:25 %in% 14:19, "numeric", "integer"),
useMapReduce = T)
spoint <- round(max(customerData$Id)*0.7)
train <- customerData[customerData$Id < spoint,]
test <- customerData[customerData$Id >= spoint,]
targets <- c("nSavings","nCCard","nChecking", "nCarloan", "nMortgage", "nHSavings")
cols <- colnames(train)
cols <- cols[!(colnames(train) %in% targets)]
cols2 <- c(cols, "nSavings")
train_subset <- train$nSavings==1 | train$nCCard==1 | train$nChecking==1  | train$nCarloan==1  | train$nMortgage==1 | train$nHSavings==1
train_subset2 <- train_subset & (train$Savings==0)
#model_ <- tableApply(data = train[train_subset2, cols2],
model_ <- tableApply(data = train[train_subset2, cols2],
rfunction = function(df) {
m <- glm(formula=nSavings ~ Age + Sex + Edu + Married + Income + Property +
CCard + Checking + Carloan + Mortgage + HSavings + pCCard + pChecking +
pCarloan + pMortgage + pHSavings,
data=df,
family=binomial)
m})
train_subset2
cols2
test_subset2 <- test_subset & (test$Savings==0)
test_subset <- test$nSavings==1 | test$nCCard==1 | test$nChecking==1  | test$nCarloan==1  | test$nMortgage==1 | test$nHSavings==1
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
test_subset <- test$nSavings==1 | test$nCCard==1 | test$nChecking==1  | test$nCarloan==1  | test$nMortgage==1 | test$nHSavings==1
test_subset2 <- test_subset & (test$Savings==0)
test_subset2$nSavings
test$nSavings[train_subset2 <- train_subset & (train$Savings==0),]
test$nSavings[train_subset2,]
test[train_subset2,nSavings]
test[train_subset2, "nSavings"]
test[test_subset2, nSavings]
test[test_subset2,]
test[test_subset2,nSavings]
test[test_subset2,"nSavings"]
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df))})
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df))},
model_)
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df))},
signature = data.frame(nSavings), model_)
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df))},
signature = data.frame(nSavings=1.0), model_)
preds
min(preds)
bigr.min(preds)
preds
typeof(preds_)
typeof(preds)
model_ <- tableApply(data = train[train_subset2, cols2],
rfunction = function(df) {
#                       library(rpart)
m <- glm(formula=nSavings ~ Age + Sex + Edu + Married + Income + Property +
CCard + Checking + Carloan + Mortgage + HSavings + pCCard + pChecking +
pCarloan + pMortgage + pHSavings,
data=df,
family=binomial(logit))
m})
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df))},
signature = data.frame(nSavings=1.0), model_)
preds
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df, type = "response"))},
signature = data.frame(nSavings=1.0), model_)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(predict(m, df, type = "response"))},
signature = data.frame(nSavings=1.0), model_)
preds
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(test.nSavings, predict(m, df, type = "response"))},
signature = data.frame(nSavingsAct=1.0,nSavingsPred=1.0), model_)
preds
preds.nSavingsAct
preds$nSavingsAct
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(test$nSavings, predict(m, df, type = "response"))},
signature = data.frame(nSavingsAct=1.0,nSavingsPred=1.0), model_)
preds
preds <- tableApply(data = test[test_subset2, cols2],
rfunction = function(df, model_) {
#                       library(rpart)
m <- bigr.pull(model_)
data.frame(df$nSavings, predict(m, df, type = "response"))},
signature = data.frame(nSavingsAct=1.0,nSavingsPred=1.0), model_)
preds
a <- bigr.pull(preds)
a <- bigr.pull(as.list(preds)
)
a <- bigr.pull(as.bbigr.list(preds)
)
a <- bigr.pull(as.bigr.list(preds))
preds
preds$nSavingsAct == 0
plogis
??plogis
preds.nrows
nrows(preds)
nrow(preds)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
nrow(preds)
loss <- sum(log(preds$nSavingsPred(preds$nSavingsAct == 1))) + sum(log(1-preds$nSavingsPred(preds$nSavingsAct == 0)))
loss <- sum(log(preds[preds$nSavingsAct == 1, "nSavingsPred"])) + sum(log(1-preds[preds$nSavingsAct == 0, "nSavingsPred"]))
loss <- loss/nrow(preds)
loss
sum(log(preds[preds$nSavingsAct == 1, "nSavingsPred"]))
loss <- sum(log(preds[preds$nSavingsAct == 0, "nSavingsPred"])) + sum(log(1-preds[preds$nSavingsAct == 1, "nSavingsPred"]))
loss <- -loss/nrow(preds)
loss
mean(preds$nSavingsAct)
sum([T T])
sum([T, T])
sum(c(T, T)
)
sum(c(T, F)
)
loss2 <- log(preds2)*sum(preds$nSavingsAct==1) + log(preds2)*sum(preds$nSavingsAct==1)
preds2 <- mean(preds$nSavingsAct)
loss2 <- log(preds2)*sum(preds$nSavingsAct==1) + log(preds2)*sum(preds$nSavingsAct==1)
loss2 <- -loss2/nrow(preds)
loss2 <- log(preds2)*sum(preds$nSavingsAct==1) + log(1-preds2)*sum(preds$nSavingsAct==0)
loss2 <- -loss2/nrow(preds)
loss2
loss
loss <- sum(log(preds[preds$nSavingsAct == 1, "nSavingsPred"])) + sum(log(1-preds[preds$nSavingsAct == 0, "nSavingsPred"]))
loss <- -loss/nrow(preds)
loss
cvTools
library(cvTools)
cv.glm
??cv.glm
library(cv.glm)
library(cv)
a = y ~ x1+x2
a
a = formula(y, x1, x2)
a = formula('y', 'x1', 'x2')
paste0("x", 1:25)
paste(xnam, collapse= "+")
paste(cols2, collapse= "+")
preds <- tableApply(data = test[test_subset2, cols2],
)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
library(bigr)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
library(bigr)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
library(bigr)
conn  <- bigr.connect(host="bi-hadoop-prod-803.services.dal.bluemix.net", port=7052, database="default", user="biblumix", password="cf~C@A1362W9")
randn(1,2)
randn(2)
rand(2)
random(1,3)
random(3)
clc
clr
cla
813.85+25
813.85+25+1841.65
(813.85+25+1841.65)-2313.67
((813.85+25+1841.65)-2313.67)/18
30*39
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/projects/tmp_cltv/a01_sens.r', echo=TRUE)
aa$a1 <- cut(1:10, c(-100,3,7,100), c('a','b))
;
c
xc
{
}}}
}
}
)
)
]
csasafdasfd
=0
,m
xcz,vzc,vk
z
cxv
l)
)
)
)
a$a1 <- cut(1:10, c(-100, 4, 7, 100), c('a', 'b', 'c'))
a <- c()
a$a1 <- cut(1:10, c(-100, 4, 7, 100), c('a', 'b', 'c'))
a$a2 <- cut(1:10, c(-100, 5, 8, 100), c('a2', 'b2', 'c2'))
a
a<- data.frame(a)
aa<- a
b <- a[1:10 %in% c(1,2,7),]
b
bb <- c()
bb$a2 <- cut(1:10, c(-100, 5, 100), c('a2', 'b2'))
bb$a1 <- cut(1:10, c(-100, 7, 100), c('a', 'c'))
bb
save.image("~/signature_test.RData")
b<- bb
bb <- data.frame(bb)
b<- bb
save.image("~/signature_test.RData")
a<- a[1,]
a[1:nrow(b), names(a)] <- b[,names(a)]
rownames(a) = make.names(1:length(a), unique=T)
a
row.names(a) = make.names(1:length(a), unique=T)
rownames(a) = make.names(1:rown(a), unique=T)
rownames(a) = make.names(1:nrow(a), unique=T)
a
b
b<- bb[1:5,]
a<- aa[1,]
a[1:nrow(b), names(a)] <- b[,names(a)]
rownames(a) = make.names(1:nrow(a), unique=T)
a
a$a1
mongo.create(host = "ds041180.mongolab.com", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
library(rmongodb)
mongo.create(host = "ds041180.mongolab.com", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
mongodb <- mongo.create(host = "ds041180.mongolab.com", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
mongodb <- mongo.create(host = "ds041180.mongolab.com:41180", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
mongodb
is.connected(mongodb)
mongo.is.connected(mongodb)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongo, "test.people", b)
mongo.insert(mongodb, "test.people", b)
b
buf <- mongo.bson.buffer.create()
buf
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test.people", b)
mongodb
mongo.insert(mongodb, "test.people", b)
mongo.bson.buffer.append(buf, "age", 22L)
buf
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test.people", b)
mongo.get.last.err()
mongo.get.last.err(mongodb)
mongodb.get.last.err()
mongo.get.last.err(db=mongodb)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongodb <- mongo.create(host = "ds041180.mongolab.com:41180", name = "", username = "IbmCloud_boj86ue1",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
mongodb <- mongo.create(host = "ds041180.mongolab.com:41180", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.disconnect(mongodb)
mongo.disconnect(mongodb)
mongodb <- mongo.create(host = "ds041180.mongolab.com:41180", name = "", username = "RAnalytics",
password = "Insign1a123", db = "IbmCloud_boj86ue1_88n8pe3b", timeout = 0L)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongo=mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.get.last.err(mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.insert(mongodb, "test_arr", b)
mongo.find.all(mongodb)
mongo.find.all(mongodb, 'test_arr')
mongo.bson.from.list(c(1,2))
mongo.bson.from.list(list(c(1,2)))
mongo.bson.from.list(list(c('go',home')))
mongo.bson.from.list(list(c('go','home')))
mongo.bson.from.list(list(c('go','home')))
mongo.bson.from.list(list(createRole="readSystemUsers"))
mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource=list(db='mydb', collection='system.users')))))
mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource=list(db=db, collection='system.users'), actions="find")), roles=''))
db <- "IbmCloud_boj86ue1_88n8pe3b"
mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource=list(db=db, collection='system.users'), actions="find")), roles=''))
comm <- mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource=list(db=db, collection='system.users'), actions="find")), roles=''))
mongo.command(mongodb, db="IbmCloud_boj86ue1_88n8pe3b", comm)
comm <- mongo.bson.from.list(list(grantRolesToUser="RAnalytics", roles=list(role= "readSystemUsers", db=db)))
comm
comm <- mongo.bson.from.list(list(grantRolesToUser="RAnalytics", roles=list(role= "readSystemUsers", db=db)))
mongo.command(mongodb, db="IbmCloud_boj86ue1_88n8pe3b", comm)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongodb, "IbmCloud_boj86ue1_88n8pe3b")
hostname <- "50.23.230.149:10010",
password <- "ca0132f8-763c-41ca-b3b6-66d4eaafbda8",
username <- "01bf8692-3bbc-4738-b706-54e4b9028578"
name <- "817408d2-f656-4223-8b11-81240a685198",
hostname <- "50.23.230.149:10010"
username <- "01bf8692-3bbc-4738-b706-54e4b9028578"
password <- "ca0132f8-763c-41ca-b3b6-66d4eaafbda8"
name <- "817408d2-f656-4223-8b11-81240a685198"
db <- "db"
mongodb <- mongo.create(host = hostname, name = name, username = username,
password = password, db = db, timeout = 0L)
mongodb <- mongo.create(host = hostname, name ='', username = username,
password = password, db = db, timeout = 0L)
mongodb <- mongo.create(host = hostname, name =name, username = username,
password = password, db = db, timeout = 0L)
mongodb <- mongo.create(host = hostname, name ='', username = username,
password = password, db = db, timeout = 0L)
hostname
hostname <- "ds055200.mongolab.com:55200"
username <- "IbmCloud_boj86ue1_2qjv2kvu_7i2n8ng7"
password <- "ap48oioBcsS2YvvbzHcRWZUEULdHYhGB"
name <- "817408d2-f656-4223-8b11-81240a685198"
db <- "IbmCloud_boj86ue1_2qjv2kvu"
mongodb <- mongo.create(host = hostname, name ='', username = username,
password = password, db = db, timeout = 0L)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "name", "Joe")
mongo.bson.buffer.append(buf, "age", 22L)
b <- mongo.bson.from.buffer(buf)
mongo.insert(mongodb, "test_arr", b)
mongo.get.last.err(mongodb, "IbmCloud_boj86ue1_88n8pe3b")
mongo.get.last.err(mongodb, "IbmCloud_boj86ue1_2qjv2kvu")
mongo.find.all(mongodb, 'test_arr')
mongodb
mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource= list(db= "mydb", collection= "system.users"), actions= "find")), roles= ''))
comm <- mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource= list(db= "mydb", collection= "system.users"), actions= "find")), roles= ''))
comm
comm <- mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource= list(db= db, collection= "system.users"), actions= "find")), roles= ''))
comm
mongo.command(mongodb,comm)
mongo.command(mongodb,db,comm)
mongo.command(mongodb,db,comm)
comm
mongo.get.err(mongodb)
mongo.get.last.err(mongodb)
mongo.get.last.err(mongodb,db)
db
mongo.insert(mongodb, "test.arr", b)
mongo.get.last.err(mongodb, "IbmCloud_boj86ue1_2qjv2kvu")
mongo.get.last.err(mongodb, db)
mongo.find.all(mongodb, 'test.arr')
comm <- mongo.bson.from.list(list(createRole="readSystemUsers", privileges=c(list(resource= list(db= db, collection= "system.users"), actions= "find")), roles= ''))
mongo.command(mongodb,db,comm)
comm
comm <- mongo.bson.from.json('{createRole: "readSystemUsers", privileges: [{resource: {db: "mydb", collection: "system.users"}, actions: ["find"]}], roles: []}')
comm <- mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: [{resource: {db: "mydb", collection: "system.users"}, actions: ["find"]}], roles: []}')
mongo.bson.from.JSON('{"name" : "Peter"}')
mongo.bson.from.JSON('{"name" : ["Peter", "alex"]}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: [{resource: {db: "mydb", collection: "system.users"}, actions: ["find"]}]}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: [{resource: {db: "mydb", collection: "system.users"}, actions: "find"}]}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: [{resource: {db: "mydb", collection: "system.users"}}]}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: [{resource: []}]}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: []}')
mongo.bson.from.JSON('{createRole: "readSystemUsers", privileges: ""}')
mongo.bson.from.JSON('{"createRole": "readSystemUsers", privileges: ""}')
mongo.bson.from.JSON('{"createRole": "readSystemUsers"}')
mongo.bson.from.JSON('{"createRole": "readSystemUsers", "privileges": ""}')
comm <- mongo.bson.from.JSON('{"createRole": "readSystemUsers", "privileges": [{"resource": {"db": "mydb", "collection": "system.users"}, "actions": ["find"]}], "roles": []}')
comm
comm <- mongo.bson.from.JSON('{"createRole": "readSystemUsers", "privileges": [{"resource": {"db": "IbmCloud_boj86ue1_2qjv2kvu", "collection": "system.users"}, "actions": ["find"]}], "roles": []}')
mongo.command(mongodb,db,comm)
comm
mongo.bson.to.list(comm)
list(createRole="readSystemUsers", privileges=c(list(resource= list(db= db, collection= "system.users"), actions= "find")), roles= '')
hostname <- "158.85.101.105:27017"
mongodb <- mongo.create(host = hostname)
username <- "siteUserAdmin"
password <- "password"
mongodb <- mongo.create(host = hostname, username=username,password=password)
mongodb <- mongo.create(host = hostname, username=username, password=password, db=db)
hostname
username
library('shiny')
options(bitmapType='cairo')
setwd("D:/Users/gtrofimo/Documents/project_files/03_app_ui")
myPort <- 778
runApp('IAP',port=myPort,host="0.0.0.0",launch.browser=F, display.mode = "norm")
